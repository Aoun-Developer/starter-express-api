swagger: "2.0"
info:
  title: TODO APP swagger Docs
  version: "1.0.0"
  description: Swagger UI Docs for Project (TODO APP)
  contact:
    name: Abbas
    url: https://swagger.io
    email: aoundeveloper@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  servers:
    -url: "http://localhost:1000/api-docs/"
    description: This is Local Server
host: localhost:1000
basePath: /
schemes:
  - http
  - https

security:
  - bearerAuth: []

securityDefinitions:
  bearerAuth:
    type: apiKey
    in: header
    name: auth-token

paths:
  # Post api to create new user response => web token
  /api/auth/createuser:
    post:
      summary: Create A New User
      tags:
        - Accounts
      description: API to create new user account
      produce:
        - applicaition/json
      cosume:
        - applicaition/json
      parameters:
        - in: body
          name: Create User
          description: Enter Valid Information.
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        200:
          description: New User Created
          schemes:
            type: object
            example: Json web token
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  # Post api to login a user response => web token
  /api/auth/login:
    post:
      summary: Login A User
      tags:
        - Accounts
      description: API to validate and login a user with jwt
      produce:
        - applicaition/json
      cosume:
        - applicaition/json
      parameters:
        - in: body
          name: Login User
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        200:
          description: User Logged In
          schemes:
            type: object
            example: Json web token
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  # Post api to create a note response => note object
  /api/notes/addnote:
    post:
      summary: Create A Note
      tags:
        - Notes
      description: API to create new note
      security:
        - bearerAuth: []
      parameters:
        - in: body
          name: Create Task
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              tags:
                type: string
      responses:
        200:
          description: New Note Created
          schemes:
            type: object
            example: Json web token
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  # Put api to update a note reponse => note object
  /api/notes/updatenote/{id}:
    put:
      summary: Update A Note
      tags:
        - Notes
      description: API to update a note
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
      responses:
        200:
          description: Note Updated
          schemes:
            type: object
            example: Json web token
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  # Get api to get all notes response => array of notes
  /api/notes/getnotes:
    get:
      summary: Get All Notes
      security:
        - jwt: []
      tags:
        - Notes
      description: API to get all notes
      responses:
        200:
          description: Notes Found
          schemes:
            type: object
            example: Json web token
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

  # Delete api to delete a note response => note object
  /api/notes/deletenote/{id}:
    delete:
      summary: Delete A Note
      tags:
        - Notes
      description: API to delete a note
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Note Deleted
          schemes:
            type: object
            example: Json web token
        400:
          description: Bad Request
        500:
          description: Internal Server Error
